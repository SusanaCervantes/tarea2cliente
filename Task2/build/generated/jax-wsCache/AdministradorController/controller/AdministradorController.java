
package controller;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AdministradorController", targetNamespace = "http://controller/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AdministradorController {


    /**
     * 
     * @param administrador
     * @return
     *     returns controller.AdministradorDto
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "guardarAdministrador", targetNamespace = "http://controller/", className = "controller.GuardarAdministrador")
    @ResponseWrapper(localName = "guardarAdministradorResponse", targetNamespace = "http://controller/", className = "controller.GuardarAdministradorResponse")
    @Action(input = "http://controller/AdministradorController/guardarAdministradorRequest", output = "http://controller/AdministradorController/guardarAdministradorResponse")
    public AdministradorDto guardarAdministrador(
        @WebParam(name = "administrador", targetNamespace = "")
        AdministradorDto administrador);

    /**
     * 
     * @param apellidos
     * @param nombre
     * @return
     *     returns java.util.List<controller.AdministradorDto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAdministradores", targetNamespace = "http://controller/", className = "controller.GetAdministradores")
    @ResponseWrapper(localName = "getAdministradoresResponse", targetNamespace = "http://controller/", className = "controller.GetAdministradoresResponse")
    @Action(input = "http://controller/AdministradorController/getAdministradoresRequest", output = "http://controller/AdministradorController/getAdministradoresResponse")
    public List<AdministradorDto> getAdministradores(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "apellidos", targetNamespace = "")
        String apellidos);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eliminarAdministrador", targetNamespace = "http://controller/", className = "controller.EliminarAdministrador")
    @ResponseWrapper(localName = "eliminarAdministradorResponse", targetNamespace = "http://controller/", className = "controller.EliminarAdministradorResponse")
    @Action(input = "http://controller/AdministradorController/eliminarAdministradorRequest", output = "http://controller/AdministradorController/eliminarAdministradorResponse")
    public String eliminarAdministrador(
        @WebParam(name = "id", targetNamespace = "")
        Long id);

}
